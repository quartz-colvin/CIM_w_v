---
title             : "Variation of [v] in Cook Islands Māori"
shorttitle        : "Cook Islands Māori"

author: 
  - name          : "Quartz Colvin"
    affiliation   : "Rutgers University"
    corresponding : no    # Define only one corresponding author
    address       : "Postal address"
    email         : "quartz.colvin@rutgers.edu"

#author_note: >
#  Complete departmental affiliations for each author (note the indentation, if you start a new paragraph).

#  Enter author note here.

#abstract: >
#  FILL-IN???.

# TO DO: >
# how-you-assessed-main-effects-and-interactions???
# methods???

keywords          : "keywords"
wordcount         : "X"

bibliography      : ["r-references.bib"]

figsintext        : yes
figurelist        : yes
tablelist         : yes
footnotelist      : no
lineno            : no

class             : "man"
output            : papaja::apa6_pdf
---

```{r include = FALSE}
#| label: setup-libs

library("tidyverse")
library("tidyr")
library("here")
library("papaja")
library("lmerTest")
library("ds4ling")

source(here::here("scripts", "libs.R"))

untidy_data <- read_csv(here("untidy_data", "cim-v-w-202410.csv"))

```

```{r, 'source-libs', echo=FALSE}
source("../scripts/libs.R")
```








# 1.0 Introduction

In this paper, we will do a statistical analysis of [v] across a sample of islands in Cook Islands Māori (CIM). It's known that in many dialects and other varieties of Māori, this phoneme can be realized as [w] or [v]. This paper aims to take a statistical approach to this generalization. 

This paper has four sub-questions to investigate. First, how does w~v duration vary by island and second, how does intensity for these phonemes vary by island. The other two questions are about identifying information about the surface forms of w~v by island. Specifically, we will model f0 and f2 to determine whether certain islands have a voiced phoneme realized. Finally, the f2 model will help us determine which islands have higher rates of [w]s surfacing and which have more [v]s surfacing.

## 1.1 Background (CIM)

Cook Islands Māori is an Eastern Polynesian language classified as *Vulnerable*. It is very closely related to Aotearoa Māori, but is definitely different from it. 

It's known across both Aotearoa (NZ) Māori and CIM that some speakers regularly pronounce [v] as [w], but it isn't clear to anyone who does this more and what conditions it.


# 2.0 Methods






# 3.0 Data

```{r}
#| label: glimpse-cim
#| message: false
#| echo: false
#| warning: false
#| include: false

knitr::kable(head(untidy_data))

```

This data set contains a lot of information, so we will need to tidy it and only keep the relevant data for the analysis. The following code chunk shows how the data was tidied and what was kept from the untidy data set. I don't show a preview of the untidy data set here because it had 17 columns and most of the columns will be taken out. In addition, it includes some metadata that I did not ask permission to share. 

```{r}
#| label: tidy-cim
#| echo: true
#| message: false
#| warning: false

dat <- untidy_data |>
  drop_na() |>   # remove rows that have NA values
  filter(TextGridLabel == "v") |>   # filter by 'v' for analysis
  pivot_longer(      # deal with all the f0 columns
    cols = c("f0_20.point", 
             "f0_50.point", 
             "f0_80.point"),
    names_to = "percent",    # names to 'percent' column
    values_to = "hz"      # values to one column called 'hz'
  ) |>
  arrange(island, Word) |>   # group by 'island', then 'word'
  select(island,      # pick which columns I want and rename some
         word = Word, 
         percent, hz, f2 = F2_midpoint, duration, 
         intensity = intensity_midpoint) |>
  write_csv("tidy_cim.csv")    # put tidy data in new .csv
```

In the new data set, we need to fix the names that we've converted to values under 'percent'. This is shown in the following code chunk. 

```{r}
#| label: change-percents
#| warning: false
#| message: false
#| echo: true

# fixing the original column names to only be the percent
# since they are all values for f0

dat$percent[dat$percent == 'f0_20.point'] <- "20"

dat$percent[dat$percent == 'f0_50.point'] <- "50"

dat$percent[dat$percent == 'f0_80.point'] <- "80"

```

Now that we have tidied this data set, here is a preview showing what it looks like.

```{r}
#| label: show-tidy-data
#| warning: false
#| message: false
#| echo: false

knitr::kable(head(dat))

```

There are many more rows than this, but if all rows were included, it would be too long of a table to show here. To explain the column names, "Percent" refers to the 20% 50% and 80% marks of the phoneme's total duration and "HZ" refers to the f0 measurement (in Hz) at that mark. "f2" is formant 2 measured in Hz at the midpoint of the phoneme. "Duration" is the total duration for the phoneme and "Intensity" is the intensity extracted from the midpoint of the phoneme. 

# 4.0 Analysis

This section readdresses the main questions about the w~v alternation. First, how does duration differ by island and second, how does intensity vary by island? Finally, do any islands have regular occurrence of [w] instead of [v] surfacing. For this final question, we will compare f0 and f2 separately. 

Note that in all of my models, I did not control for where w~v occurs in the word, since I am looking at general frequency information and not doing a phonological analysis of specific environments in which [w] or [v] occurs more.
















## 4.1 Duration by island 

First, we compare the duration of [v] across the four islands. To do this, I will fit a *linear model* below to track the relationship between the duration of w~v and which island a speaker is from. For this model, duration is the dependent variable and island is the independent or predictor variable. 

Before we fit the model, we need to see if fitting a model for duration is appropriate. The visual qq-plot test for duration shows that we need to transform the values for duration in order to fit a model. 

```{r}
#| label: qqplot-duration
#| echo: false
#| include: false

qqnorm(dat$duration, pch = 1, frame = FALSE)
qqline(dat$duration, col = "steelblue", lwd = 2)

```

To normalize the duration variable, we need to log-transform the data. So, we make a new column where we apply 'log()' to the 'duration' column with 0.1 added to it, and then add the new column to the dataset. The following boxplot shows the normalized durations by island.


```{r}
#| label: log-transform
#| echo: false

dat$log_duration <- log(dat$duration + 0.1)

#knitr::kable(head(dat))

```


```{r}
#| label: duration-by-island
#| warning: false
#| message: false
#| echo: false
#| out-width: "100%"

mod1 <- lm(formula = log_duration ~ island, data = dat) |>
  ggplot() +
  aes(x = island, y = log_duration, color = island) +
  geom_boxplot() +
  labs(
    title = "Compare [v] duration by island",
    x = "Island",
    y = "Duration"
  )

```

```{r}
#| label: print-mod1
#| echo: false
#| out-width: "75%"

print(mod1)

```


A few things are visually clear from this comparative boxplot. Most obviously, Penrhyn had the largest range of w~v durations and Rarotonga had the smallest range. Rarotonga also had the lowest average duration for w~v and Penrhyn had the highest average duration. Interestingly, Mauke and Rarotonga didn't seem to have outliers in w~v durations, but Atiu and Penrhyn had a few outlier data points. 






## 4.2 Intensity by island

Next, in the same fashion we did to compare duration of [v] tokens, we can compare the intensity midpoints for the tokens across the islands. First we need to look at a qq-plot to see if fitting a model for intensity is an appropriate decision. 

```{r}
#| label: qqplot-intensity
#| echo: false
#| include: false

qqnorm(dat$intensity, pch = 1, frame = FALSE)
qqline(dat$intensity, col = "steelblue", lwd = 2)

```

The qq-plot test showed that intensity *is* normally distributed, so we can fit a model for intensity. Once again I fit a linear model for intensity (the dependent variable) by island (the predictor variable). The results are shown via a boxplot again. 



```{r}
#| label: intensity-by-island
#| warning: false
#| message: false
#| echo: false

mod2 <- lm(formula = intensity ~ island, data = dat) |>
  ggplot() +
  aes(x = island, y = intensity, color = island) +
  geom_boxplot() +
  labs(
    title = "Compare [v] intensity by island",
    x = "Island",
    y = "Intensity"
  )

```

```{r}
#| label: print-mod2
#| echo: false
#| out-width: "75%"

print(mod2)

```

Looking at the comparative boxplot, we can see how intensity midpoints vary across these four islands. The average intensity values were similar for all four, but Penrhyn had the lowest mean. These averages varied by less than 10, so they are quite similar. Mauke had the highest range for intensity midpoints, while Atiu had the smallest. Rarotonga had the most outliers and the other three islands had basically no outliers.  

## 4.3 Voicing by island 

Now we can investigate how voicing of w~v varies by island. The f0 values used for this were extracted at the 20%, 50% and 80% points of the duration of the target phoneme. 

Again, we first need to check if fitting a model for this variable is appropriate. If we do another visual qq-plot test, we find that 'Hz' is normally distributed and thus we can fit a model. 

```{r}
#| label: qqplot-hz
#| echo: false
#| include: false

qqnorm(dat$hz, pch = 1, frame = FALSE)
qqline(dat$hz, col = "steelblue", lwd = 2)

```

This time, I will show the model results in a scatterplot with a facet for each island. These plots show how F0 (measured in Hz) changes over the duration of the w~v tokens. 


```{r}
#| label: f0-traj-mod
#| warning: false
#| message: false
#| echo: false

mod_f0 <- dat |>
  lm(formula = duration ~ hz + island) 

f0_plot <- mod_f0 |>
  ggplot() + 
  aes(x = duration, y = hz, color = island) +
  geom_point() +
  geom_smooth(
    method="glm",
    color="black",
    method.args = list(family = "poisson")
  ) +
  facet_wrap(~island) +
  labs(
    title = "F0 values by duration across the Cook Islands", 
    x = "Duration", 
    y = "F0 (Hz)"
  ) 

```



```{r}
#| label: print-modf0
#| echo: false
#| warning: false
#| message: false
#| out-width: "75%"

print(f0_plot)



```


As noted earlier, duration clearly differs between these four islands. The slopes for Atiu and Penrhyn show that over the duration of the phoneme, f0 decreases. This slope isn't steep, but it is present. Mauke and Rarotonga have upwards slopes, showing that over the duration of [v], the f0 tends to increase. Rarotongan Māori has the sharpest increase in Hz over the duration of the phoneme. 

Mauke is the only one that seems to *regularly* have voiceless [w] in place of 'v', but it also has the biggest overall range for f0 Hz. The other three islands typically have f0 values \> 100 Hz, so these tokens are voiced. 

In summary, it seems that f0 was not a good predictor for the [w] vs. [v] question, but it did reveal that Mauke's [w] phoneme has a higher rate of voicelessness when it is realized.


## 4.4 w~v distribution by island

Finally, we can revisit the main question of this article: which islands have more [w] or more [v]? One of the primary acoustic differences between [w] and [v] is that [w] has a lower f2. Here, we define "low f2" as \<850 Hz. To investigate this question, we will fit a model for f2 by island. 

If we do a visual qq-plot test, we find that the raw data for f2 are *not* normally distributed. Before we fit the model, we need to use 'log()' to transform the data and put it in a new column like we did for duration.

```{r}
#| label: qqplot-f2
#| echo: false
#| include: false

qqnorm(dat$f2, pch = 1, frame = FALSE)
qqline(dat$f2, col = "steelblue", lwd = 2)

```

```{r}
#| label: add-log-f2
#| echo: false

dat$log_f2 <- log(dat$f2 + 1)

#knitr::kable(head(dat))

```

```{r}
#| label: f2-by-island
#| warning: false
#| message: false
#| echo: false
#| out-width: "100%"

mod_f2 <- lm(formula = log_f2 ~ island, data = dat) 

plot_f2 <- mod_f2 |>
  ggplot() +
  aes(x = island, y = log_f2, color = island) +
  geom_boxplot() +
  labs(
    title = "Compare f2 by island",
    x = "Island",
    y = "f2 (Hz)"
  )

```

```{r}
#| label: print-plot-f2
#| message: false
#| warning: false
#| echo: false
#| out-width: "75%"

print(plot_f2)

```

```{r}
#| label: log-f2-cutoff
#| include: false

f2_cutoff <- log(850 + 1)

#print(f2_cutoff)

```

Since we normalized the f2 values in the model, we also have to transform the cutoff point of 850 Hz by the same log transformation we did for the real f2 values. If we do this, the cutoff point in our model is `r f2_cutoff`.

Visually, all of these four islands have instances of [w], and their means are all slightly (or much) higher than the cut-off point. Additionally, all of the islands except Penrhyn have *many* tokens where 'v' surfaces as [w]. 





# 5.0 Formal results

```{r}
#| label: descriptive-stats
#| warning: false
#| message: false
#| echo: false
#| include: false

summary(mod_f0)

summary(mod1)

summary(mod2)

```

To interpret the results of each model, we will do t-tests for the normalized versions of each model. If p < 0.05 then the difference is not random chance. For the t values, a larger t value indicates a greater difference between the means.  

```{r}
#| label: t-tests
#| echo: false
#| include: false

t.test(dat$log_duration, var.equal = FALSE)

t.test(dat$intensity, var.equal = FALSE)

t.test(dat$hz, var.equal = FALSE)

t.test(dat$log_f2, var.equal = FALSE)

```

For *normalized duration*, t=-408.11 and p-value < 2.2e-16, and there is a 95% confidence interval. For *intensity*, t=286.21, p-value < 2.2e-16 and there is a 95% confidence interval. For *hz* (f0), t=207.57, the p-value is < 2.2e-16, and we have a 95% confidence interval. For *normalized f2*, t=1060.9, p-value is < 2.2e-16 and we have a 95% confidence interval. 

All of these p-values are < 0.05, so duration, intensity, f0 (Hz column), and f2 are all statistically significant interactions with island. T values for duration and f2 were the furthest from 0, so these acoustic properties varied the most depending on which island a speaker was from. 

I now want to pose the question of what percent of w~v surface as [w] and [v] for each island in the data, now that we have the values and a cutoff value for f2. This requires another bit of data transformation to calculate percentages. The first transformation step is adding a new column that says "v" if the value in log_f2 is greater than the cutoff value, and outputs "w" if the value in the 'log_f2' column is lower than the cutoff value.

```{r}
#| label: final-form
#| echo: false

final_dat <- dat |> 
  select(island, word, percent, hz, log_f2, log_duration, intensity) |> 
  mutate(surface_form = if_else(
    condition = log_f2 > 6.746412,
    true = "v",
    false = "w"
    ) 
  ) 
```

```{r}
#| label: w-or-v-final
#| echo: false
#| out-width: "75%"

freq_table <- final_dat |>
  group_by(island, surface_form) |>
  summarise(total_count=n(),
            .groups = 'drop') |>
  mutate(freq = paste0(round(total_count))
  ) |>
  select(island, surface_form, freq) |>
  t()

knitr::kable(freq_table)

```


```{r}
#| label: real-percentages
#| echo: false

atiu_w <- (54/(264 + 54)) * 100

  
mauke_w <- (42/(1005 + 42)) * 100
  

pen_w <- (6/(327 + 6)) * 100
  

raro_w <- (6/(303 + 6)) * 100

```

I manually calculated the percentages of [w]s surfacing in each group (island). The percent of [w]s in Atiu was `r atiu_w`%, `r mauke_w`% for Mauke, `r pen_w`% for Penrhyn and `r raro_w`% for Rarotonga.





We can also transform the data in a similar way to calculate the percentages of [w] that are voiced in each island. 

```{r}
#| label: voice-data
#| echo: false

voice_dat <- dat |> 
  select(island, word, percent, hz, log_duration, log_f2, intensity) |> 
  mutate(voiceless_w = if_else(
    condition = (hz < 100 & log_f2 > 6.746412),
    true = "yes",
    false = "no"
    ) 
  ) 

```

```{r}
#| label: voice-percents
#| echo: false
#| out-width: "75%"

voice_table <- voice_dat |>
  group_by(island, voiceless_w) |>
  summarise(total_count=n(),
            .groups = 'drop') |>
  mutate(voiceless_w = paste0(round(total_count))
  ) |>
  select(island, voiceless_w) |>
  t()

knitr::kable(voice_table)

```


```{r}
#| label: voiceless-percents
#| echo: false
  
mauke_voice <- (24/(1023 + 24)) * 100
  
pen_voice <- (1/(332 + 1)) * 100
  
raro_voice <- (1/(308 + 1)) * 100

```

The percentage of voiceless [w]s in Mauke was `r mauke_voice`%, for Penrhyn it was `r pen_voice`% and for Rarotonga it was `r raro_voice`%.

## 5.1 Data analysis

I used `r cite_r("r-references.bib")` for all my analyses.



# 6.0 Conclusion

In conclusion, this paper found that duration of w~v, intensity, f0, and f2 are all correlated with what island a CIM speaker is from. The strongest correlations with island are duration and f2. The island with the longest average duration for w~v is Penrhyn and the shortest average is Rarotonga. The island with the highest average intensity midpoint is Rarotonga, and the shortest is Penrhyn. 

F2 data showed us that all islands have some small percent of [w]s surfacing instead of [v], but Atiu has the highest rate of realizing [w]s instead of [v]s. Furthermore, when w~v surfaces as [w], formant data from f0 revealed that only Mauke has multiple instances of it surfacing voiceless, at `r mauke_voice`% of [w]s being voiceless.

# References
```{r create_r-references}
r_refs(file = "r-references.bib")
```

\setlength{\parindent}{-0.5in}
\setlength{\leftskip}{0.5in}
